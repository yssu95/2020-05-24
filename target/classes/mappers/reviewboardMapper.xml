<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reviewboardMapper">
   <!-- 게시판 글 작성 -->
   <insert id="insert" parameterType="kr.co.vo.ReviewBoardVO" useGeneratedKeys="true" keyProperty="bno">
       <selectKey keyProperty="bno" resultType="int" order="BEFORE">
          SELECT REVIEW_BOARD_SEQ.NEXTVAL FROM DUAL
       </selectKey>
       INSERT INTO REVIEW_BOARD(    BNO
                         , HEADER 
                            , TITLE 
                            , CONTENT 
                            , WRITER  )
                     VALUES(    #{bno}
                              , #{header}
                             , #{title}
                             , #{content}
                             , #{writer}  )
   
    </insert>
   
    <!-- 홈 에서 불러올 게시물  정보 조회 -->
   <select id="homelist" resultType="kr.co.vo.ReviewBoardVO">
       select 
          bno, title, content, writer, regdate, hit, reply_cnt, header
      FROM REVIEW_BOARD
    ORDER BY REGDATE DESC
   </select>
   
   <select id="listPage" resultType="kr.co.vo.ReviewBoardVO" parameterType="kr.co.vo.SearchCriteria">
      SELECT  BNO, 
            HEADER,
              TITLE, 
              CONTENT,
              WRITER, 
              REGDATE,
              HIT,
              reply_cnt
       FROM ( 
              SELECT BNO,
                    HEADER, 
                     TITLE, 
                     CONTENT, 
                     WRITER, 
                     REGDATE,
                     HIT, 
                     reply_cnt,
                     ROW_NUMBER() OVER(ORDER BY BNO DESC) AS RNUM
               FROM REVIEW_BOARD
               WHERE 1=1 AND bno>0
                  <include refid="search"></include>
                             ) MP
      WHERE RNUM BETWEEN #{rowStart} AND #{rowEnd}
      ORDER BY BNO DESC
   </select>
   
   <select id="listCount" parameterType="kr.co.vo.SearchCriteria" resultType="int">
      SELECT COUNT(BNO)
         FROM REVIEW_BOARD
         WHERE 1=1
         
      <include refid="search"></include>   
         AND BNO > 0
   </select>
   
   <sql id="search">
      <if test="searchType != null">
         <if test="searchType == 't'.toString()">AND TITLE LIKE '%' || #{keyword} || '%'</if>
         <if test="searchType == 'c'.toString()">AND CONTENT LIKE '%' || #{keyword} || '%'</if>
         <if test="searchType == 'w'.toString()">AND WRITER LIKE '%' || #{keyword} || '%'</if>
         <if test="searchType == 'tc'.toString()">AND (TITLE LIKE '%' || #{keyword} || '%') or (CONTENT LIKE '%' || #{keyword} || '%')</if>
      </if>
   </sql>
   
   <select id="read" parameterType="int" resultType="kr.co.vo.ReviewBoardVO">
      SELECT   BNO
            , HEADER
            , TITLE
            , CONTENT
            , WRITER
            , REGDATE
        FROM REVIEW_BOARD
       WHERE BNO = #{bno}
   </select>
   
   <update id="update" parameterType="kr.co.vo.ReviewBoardVO">
      UPDATE REVIEW_BOARD
         SET TITLE    =   #{title},
               HEADER   =   #{header},
               CONTENT  =   #{content}
       WHERE BNO = #{bno} 
   </update>
   
   <!-- 댓글 -->
   <update id="updateReplyCnt">
      UPDATE REVIEW_BOARD
      set reply_cnt = reply_cnt + #{amount}
      where bno = #{bno}
   </update>
   
   <delete id="delete" parameterType="int">
      DELETE 
        FROM REVIEW_BOARD
       WHERE BNO = #{bno}
   </delete>
   
   <!-- 첨부파일 업로드 -->
    <insert id="insertFile" parameterType="hashMap">
      INSERT INTO REVIEW_FILE(
         FILE_NO,
         BNO,
         ORG_FILE_NAME,
         STORED_FILE_NAME,
         FILE_SIZE
      )VALUES(
         SEQ_REVIEW_FILE_NO.NEXTVAL,
         #{BNO},
         #{ORG_FILE_NAME},
         #{STORED_FILE_NAME},
         #{FILE_SIZE}
      )
    </insert>
    
    <!-- 첨부파일 조회 -->
    <select id="selectFileList" parameterType="int" resultType="hashMap">
       SELECT FILE_NO,
             ORG_FILE_NAME,
             ROUND(FILE_SIZE/1024,1) AS FILE_SIZE,
             DEL_GB
         FROM REVIEW_FILE
        WHERE BNO = #{BNO}
          AND DEL_GB = 'N'
        ORDER BY FILE_NO ASC
    </select>
    
    <!-- 첨부파일 다운 -->
    <select id="selectFileInfo" parameterType="hashMap" resultType="hashMap">
       SELECT 
          STORED_FILE_NAME,
          ORG_FILE_NAME
       FROM REVIEW_FILE
       WHERE FILE_NO = #{FILE_NO}
    </select>
    
    <!-- 첨부파일 수정 -->
    <update id="updateFile" parameterType="hashMap">
       UPDATE REVIEW_FILE SET
       DEL_GB = 'Y'
       WHERE FILE_NO = #{FILE_NO}
    </update>
    
    <!-- 게시판 조회수 -->
    <update id="boardHit" >
       UPDATE REVIEW_BOARD SET
       HIT = HIT+1
       WHERE bno = #{bno}
    </update>
</mapper>